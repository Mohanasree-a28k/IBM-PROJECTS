# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FBgPv7rq0zSuWifMobvCUqW8bgwai2ym
"""

import numpy as np

import pandas as pd

df = pd . read_csv("Churn_Modelling.csv")

df

df.shape

df.columns

df["NumOfProducts"].unique()

df["NumOfProducts"].value_counts()

df.dtypes

df.head()

df.describe()

import matplotlib . pyplot as plt

import seaborn as sns

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

plt.figure(figsize=(8,8))
sns.countplot(x='Exited',data=df)
plt.xlabel("0-Still with bank :: 1-Exited From Bank")
plt.ylabel("Count")
plt.title("Visual")
plt.show()

df.isna().any()

df.isnull().sum()

# Data Manipulation

df_1=df.copy()

df_1.head()

df_1.shape

df.drop(['RowNumber','CustomerId','Surname'],axis=1,inplace =True)

df.head()

df.Geography.value_counts()

geometry = pd.get_dummies(df["Geography"],drop_first=False)
gender=pd.get_dummies(df["Gender"],drop_first=False)
geometry

gender

df = pd.concat([df,geometry,gender],axis=1)

df.columns

df.drop(["Geography","Gender"], axis=1, inplace= True)

df.head()

df.drop('Exited', axis=1)

# x-Independent
# y-Dependend
x = df.drop ('Exited' ,axis=1)
y=df['Exited']

x.head()

y.head()

from sklearn. model_selection import train_test_split

x_train,x_test,y_train,y_test= train_test_split(x,y,test_size=0.2,random_state=0)

print('x Train shape:{} , y Train SHape:{}'.format(x_train.shape,y_train.shape))

print('x Test shape:{} , y Test SHape:{}'.format(x_test.shape,y_test.shape))

x_train

# Scaling

# Start Sequential Model